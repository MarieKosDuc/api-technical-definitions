[
    {"Paradigmes de programmation": 
    [
        {
            "title": "Programmation impérative",
            "description": "Ce paradigme décrit les opérations d'un programme comme des séquences d'instructions exécutées par l'ordinateur pour modifier l'état du programme (ce que le programme doit garder dans sa mémoire au cours de son exécution : numéro de ligne courant, valeur des variables, etc.). La programmation impérative se concentre sur la description de comment un programme doit travailler pour résoudre un problème."
        },
        {
            "title": "Programmation déclarative",
            "description": "Un programmes déclaratif prend uniquement en compte ce qu'il doit accomplir, et non la manière de le faire. Il peut être descriptif (HTML, CSS, XML) ou procédural (suite de commandes : SQL)."
        },
        {
            "title": "Programmation orientée objet",
            "description": "Modèle de langage de programmation qui s'articule autour d'objets et de données, plutôt que d'actions et de logique. La POO vise à modéliser des objets du monde réel."
        },
        {
            "title": "Programmation événementielle",
            "description": "Ce paradigme est fondé sur les événements qui se produisent dans le programme. En d'autres termes, l'exécution du programme sera déterminée par ce qui se produit à un instant donné. Il utilise des boucles asynchrones."
        },
        {
            "title": "Signature de fonction",
            "description": "Définit les entrées et sorties des fonctions et des méthodes. Une signature peut comporter des paramètres et leurs types, une valeur et un type de retour, des exceptions susceptibles d'être déclenchées ou reçues, des informations sur la disponibilité de la méthode dans un programme orienté objet (telles que les mots-clés public, static, ou prototype)."
        },
        {
            "title": "Fonction anonyme",
            "description": "Aussi appelée 'lambda', une fonction qui n'a pas de nom. Elle ne peut donc pas être appelée et exécutée globalement, elle s'exécute à l'endroit de sa déclaration."
        },
        {
            "title": "Déclaration/définition",
            "description": "La définition détermine la valeur à stocker dans une variable, fonction ou classe ; elle ne peut intervenir qu'une seule fois. La déclaration spécifie le nom et le type de la variable/fonction/classe, et peut être réitérée dans le programme."
        },
        {
            "title": "Fonction récursive",
            "description": "Fonction qui s'appelle elle-même au cours de son exécution."
        },
        {
            "title": "Pile d'appel (callstack)",
            "description": "Structure de données de type pile qui sert à enregistrer des informations au sujet des fonctions actives dans un programme informatique."
        },
        {
            "title": "Classe, instance",
            "description": "Composée d'attributs et de méthodes, la classe est la structure d'un objet, c'est-à-dire la déclaration de l'ensemble des composants de celui-ci. L'objet est une instanciation de la classe, le produit sorti du moule."
        },
        {
            "title": "Constructeur",
            "description": "Le constructeur d’une classe est la méthode qui permet de construire les objets de cette classe en initialisant leurs propriétés."
        },
        {
            "title": "This/self",
            "description": "En JS et Java, le mot-clé this permet de désigner, dans une classe, l’objet courant de la classe elle-même. Le mot-clé self reprend les fonctionnalités du mot-clé this et est utilisé dans d’autres langages de programmation comme Python."
        },
        {
            "title": "Encapsulation",
            "description": "L'encapsulation désigne le fait de catégoriser chaque objet dans une classe d’objet spécifique. Elle permet de définir des niveaux de visibilité des éléments de la classe. Ces niveaux de visibilité définissent les droits d’accès aux données selon que l’on y accède par une méthode de la classe elle-même, d’une classe héritière, ou bien d’une classe quelconque."
        },
        {
            "title": "Public",
            "description": "La propriété ou la méthode sera accessible à l'intérieur mais aussi à l'extérieur de la classe. Il s’agit du plus bas niveau de protection des données."
        },
        {
            "title": "Private",
            "description": "La propriété ou la méthode sera accessible à l'intérieur de la classe seulement."
        },
        {
            "title": "Protected",
            "description": "La propriété ou la méthode sera accessible à l'intérieur de la classe et des classes héritées."
        },
        {
            "title": "Static",
            "description": "Les propriétés et les méthodes statiques peuvent être utilisées sans avoir besoin d'instancier la classe."
        },
        {
            "title": "Héritage",
            "description": "Le principe d’héritage, permet à un objet d’hériter des caractéristiques d’un autre objet (on dit alors objet Parent). L’objet enfant hérite alors de toutes les propriétés et méthodes d’une classe, ainsi que leur implémentation logique, qui peuvent être réécrites au besoin (override)."
        },
        {
            "title": "Interface",
            "description": "Une interface est une déclaration de méthodes et de propriétés que tout objet enfant devra obligatoirement implémenter à son tour. L’interface est donc le prototype d’un objet (elle ne contient aucune implémentation logique de code)."
        },
        {
            "title": "Polymorphisme",
            "description": "En POO, des fonctions et des méthodes de même nom peuvent avoir des comportements différents ou effectuer des opérations sur des données de types différents. On distingue 2 types de polymorphisme, la surcharge (permet de choisir entre différentes implémentations d'une même fonction ou méthode selon le nombre et le type des arguments fournis) et la redéfinition (possibilité de redéfinir une méthode dans des classes héritant d’une classe de base)."
        }        
        ]
    },
    {"Langages de programmation": [
        {
            "title": "Type de variable",
            "description": "Une variable est une entité dont la valeur peut changer. Elle peut être de type entier, réel (nombres à virgule flottante), booléen (0/1) ou chaîne de caractères."
        },
        {
            "title": "Conditions (instructions conditionnelles)",
            "description": "Une instruction conditionnelle est une fonction d'un langage de programmation qui effectue différents calculs ou actions en fonction de l'évaluation d'une condition booléenne, à savoir vraie ou fausse."
        },
        {
            "title": "Boucle",
            "description": "Structure de contrôle de programmation qui permet de répéter l'exécution d'une séquence d'instructions."
        },
        {
            "title": "Table de hachage (dictionnaire)",
            "description": "Aussi appelée 'tableau associatif', structure de données qui permet une association clé–valeur."
        },
        {
            "title": "Liste (array)/tableau",
            "description": "Structure de données ordonnée, indexable par des entiers, mutable (modifiable), qui peut contenir plusieurs fois la même valeur."
        },
        {
            "title": "Tuple",
            "description": "Collection d'éléments ordonnée, non mutable (non modifiable), qui peut contenir plusieurs fois la même valeur."
        },
        {
            "title": "Ensemble",
            "description": "Collection d’éléments non ordonnée, non indexés et non modifiable qui n’accepte pas de contenir plusieurs fois le même élément."
        },
        {
            "title": "Liste chaînée",
            "description": "Collection ordonnée et de taille arbitraire d'éléments de même type, dont la représentation en mémoire de l'ordinateur est une succession de cellules faites d'un contenu et d'un pointeur vers une autre cellule."
        },
        {
            "title": "Arbre (arbre binaire)",
            "description": "Structure de données non linéaire dans laquelle chaque noeud a au plus deux enfants. Le noeud initial est appelé 'racine'."
        },
        {
            "title": "Graphe",
            "description": "Structure de données non linéaire composée de sommets et d'arrêtes."
        },
        {
            "title": "Bibliothèque/librairie",
            "description": "Ensemble de fonctions et de classes déjà codées dans un langage spécifique, appelées par le code."
        },
        {
            "title": "Framework",
            "description": "Le framework définit un squelette au sein duquel l’application définit ses propres fonctionnalités. Le code est appelé par le framework, et non l'inverse."
        },
        {
            "title": "Gestionnaire de paquets",
            "description": "Un ou plusieurs outils automatisant le processus d'installation, désinstallation, mise à jour de logiciels installés sur un système informatique. Un paquet est une archive comprenant les fichiers informatiques, les informations et procédures nécessaires à l'installation d'un logiciel sur un système d'exploitation au sein d'un agrégat logiciel, en s'assurant de la cohérence fonctionnelle du système ainsi modifié."
        }        
        ]
    },
    {"Architecture logiciel": [
        {
            "title": "Internet / world wide web",
            "description": "L’Internet est un réseau mondial d’ordinateurs capables de communiquer entre eux. Le World Wide Web est un réseau de pages hypertextes reliées par des liens, disponibles via Internet."
        },
        {
            "title": "DOM",
            "description": "Le DOM (Document Object Model) est une API qui représente et interagit avec tous types de documents HTML ou XML. Le DOM est un modèle de document chargé dans le navigateur. Sa représentation est un arbre nodal, chaque nœud représentant une partie du document."
        }, 
        {
            "title": "Client/serveur",
            "description": "Le protocole ou environnement client–serveur désigne un mode de transaction (souvent à travers un réseau) entre plusieurs programmes ou processus : l'un, qualifié de client, envoie des requêtes ; l'autre, qualifié de serveur, attend les requêtes des clients et y répond."
        },
        {
            "title": "API",
            "description": "Une API (application programming interface ou « interface de programmation d'application ») est une interface logicielle qui permet de « connecter » un logiciel ou un service à un autre logiciel ou service afin d'échanger des données et des fonctionnalités."
        },
        {
            "title": "Base de données relationnelle",
            "description": "La conception de ces bases de données repose sur le relationnel, similaire au modèle Entité Association qu’on retrouve pour la programmation orientée objet. L'idée générale est de définir des 'éléments' et le relations' qui les lient. Leur langage de requête de référence est le SQL."
        },
        {
            "title": "Modèle entité-association",
            "description": "Ce modèle fournit une description graphique pour représenter des modèles de données sous la forme de diagrammes contenant des entités et des associations. Il distingue des objets de gestion (une commande, une livraison, une facture, un produit...) et des associations entre les objets (\"contient\" entre l'objet \"commande\" et l'objet \"produit\"."
        }, 
        {
            "title": "Relations",
            "description": "Les relations de base de données sont des associations entre des tables qui sont créées à l'aide d'instruction de jointure pour récupérer des données. Les deux tables ne peuvent avoir qu'un seul enregistrement de chaque côté de la relation."
        }, 
        {
            "title": "Clé primaire",
            "description": "Dans une base de données relationnelle, une clé primaire est la donnée qui permet d'identifier de manière unique un enregistrement dans une table. Elle peut être composée d'une ou de plusieurs colonnes de la table. Deux lignes distinctes de la table ne peuvent pas avoir les mêmes valeurs dans les colonnes définies comme clé primaire."
        }, 
        {
            "title": "Clé étrangère",
            "description": "Une clé étrangère identifie une colonne ou un ensemble de colonnes d'une table comme référençant une colonne ou un ensemble de colonnes d'une autre table (la table référencée). Les colonnes de la table référencée doivent faire partie d'une contrainte de clé primaire ou d'une contrainte d'unicité. La contrainte de clé étrangère garantit que les valeurs de chaque ligne de la table référençant existent dans la table référencée."
        }, 
        {
            "title": "Cardinalité",
            "description": "La cardinalité d'une association permet de représenter le nombre minimum et maximum d'instances qui sont autorisées à participer à la relation. La cardinalité est définie pour les deux sens de la relation."
        }, 
        {
            "title": "Jointure",
            "description": "la jointure ou appariement est l'opération permettant d'associer plusieurs tables ou vues de la base par le biais d'un lien logique de données entre les différentes tables ou vues."
        },
        {
            "title": "Normalisation",
            "description": "La normalisation correspond au processus d’organisation des données dans une base de données. Ce processus comprend la création de tables et l’établissement de relations entre celles-ci conformément à des règles conçues à la fois pour protéger les données et pour rendre la base de données plus flexible grâce à l’élimination de la redondance et des dépendances incohérentes."
        },
        {
            "title": "CRUD",
            "description": "Create - Read - Update - Delete. Les quatre opérations réalisables sur une base de données."
        }
        ]
    },
    {"Systèmes et réseau": [
        {
            "title": "Système d'exploitation",
            "description": "Ensemble de programmes qui permettent le fonctionnement et l’utilisation des principales ressources de l’ordinateur (mémoire, disque dur, processeur). Il sert de pont entre ces composants et les logiciels ou applications qui vont permettre à l’utilisateur de profiter des fonctionnalités de son appareil. Il est composé d’un noyau (kernel) où sont regroupés tous les programmes basiques du système, d’une interface (shell) qui joue le rôle d’intermédiaire entre l’utilisateur et le système d’exploitation et d’un système de fichiers (File System ou FS) pour la gestion des données."
        },
        {
            "title": "CPU",
            "description": "Unité de traitement ou microprocesseur principal d'un ordinateur. Il traite et organise les données des autres composants de la machine comme la mémoire et le disque dur, puis réalise des calculs divers pour faciliter l'interaction entre l'utilisateur et la machine."
        }, 
        {
            "title": "TCP/IP",
            "description": "Transmission Control Protocol/Internet Protocol (Protocol de contrôle des transmissions/Protocole Internet). TCP/IP est un ensemble de règles normalisées permettant aux ordinateurs de communiquer sur un réseau tel qu'Internet. Son modèle est divisé en quatre couches distinctes (liaison de données, internet, transport, application). Utilisées ensemble, elles peuvent également être appelées une suite de protocoles."
        },
        {
            "title": "Couche de liaison de données",
            "description": "La couche de liaison de données, également appelée couche d'interface réseau ou couche physique, gère les parties physiques de l'envoi et de la réception de données à l'aide du câble Ethernet, du réseau sans fil, de la carte d'interface réseau, du pilote de périphérique de l'ordinateur, etc."
        },
        {
            "title": "Couche internet",
            "description": "La couche Internet, également appelée couche réseau, contrôle le mouvement des paquets sur le réseau."
        },
        {
            "title": "Couche transport",
            "description": "La couche transport fournit une connexion des données fiable entre deux appareils. Elle divise les données en paquets, accuse réception des paquets qu'elle a reçus de l'autre appareil et s'assure que ce dernier accuse réception des paquets qu'il reçoit."
        },
        {
            "title": "Couche application",
            "description": "La couche application est le groupe d'applications nécessitant une communication réseau. Il s'agit généralement de l'application avec laquelle l'utilisateur interagit, comme les e-mails et la messagerie. Parce que les couches inférieures gèrent les détails de la communication, les applications n'ont pas besoin de s'en préoccuper."
        },
        {
            "title": "HTTP",
            "description": "Hypertext Transfer Protocol : protocole de communication client-serveur développé pour le World Wide Web. Il définit la communication entre un client et un serveur, et fonctionne selon le principe de 'requête/réponse'"
        },   
        {
            "title": "Adresse MAC",
            "description": "Adresse physique unique d'un appareil"
        }, 
        {
            "title": "Adresse IP",
            "description": "Numéro d'identification de chaque appareil connecté à un réseau utilisant le protocole Internet."
        },
        {
            "title": "Broadcast",
            "description": "Transmission simultanée vers tous les équipements d'un réseau."
        },
        {
            "title": "DHCP",
            "description": "Le protocole DHCP (Dynamic Host Configuration Protocol) est un protocole client/serveur qui fournit automatiquement à un hôte IP (Internet Protocol) son adresse IP et d’autres informations de configuration associées, telles que le masque de sous-réseau et la passerelle par défaut."
        },
        {
            "title": "Répéteur (hub)",
            "description": "Dispositif d'interconnexion de réseau physique. Sa fonction est de générer des signaux (c'est-à-dire, amplification et remodelage du signal d'origine)."
        },
        {
            "title": "Commutateur (switch)",
            "description": "Le switch fonctionne sur la deuxième couche OSI (la couche de liaison de données). Il régénère l'information et l'envoie au port désigné après le traitement interne, via l'adresse MAC."
        },
        {
            "title": "Routeur",
            "description": "Le routage fait référence au transfert d'informations des emplacements sources vers les emplacements cibles via des réseaux interconnectés."
        },
        {
            "title": "TCP/UDP",
            "description": "TCP (transfert control protocol) est un protocole bilatéral qui ouvre une connexion entre le client et le serveur. Après un \"handshake\" (premier contact du serveur vers le client), le destinataire accuse réception des paquets reçus. Les paquets corrompus ou manquants sont redemandés et renvoyés par le serveur. <br /> A l'inverse, UDP (user datagram protocol) est un protocole unilatéral. Plus rapide et léger que TCP, il n'implique pas de conversation client/serveur, mais uniquement un envoi de paquets non numérotés vers le demandeur, sans accusé de réception."
        }, 
        {
            "title": "DNS", 
            "description": "Le Domain Name System (système de nom de domaine) ou DNS est un service informatique distribué qui associe les noms de domaine Internet avec leurs adresses IP."
        }, 
        {
            "title": "HTTP",
            "description": "L’Hypertext Transfer Protocol, généralement abrégé HTTP, est un protocole de communication client-serveur développé pour le World Wide Web. HTTPS (secure) en est la variante sécurisée par le chiffrement et l'authentification."
        },
        {
            "title": "URL",
            "description": " Uniform Resource Locator, littéralement « localisateur uniforme de ressource »). Couramment appelée adresse web, l'URL est une chaîne de caractères uniforme qui permet d'identifier une ressource du World Wide Web par son emplacement et de préciser le protocole internet pour la récupérer (par exemple http ou https)."
        }, 
        {
            "title": "Intégrité",
            "description": "L'un des fondements de la sécurité informatique : garantir que les données sont bien celles que l'on croit être. "
        },
        {
            "title": "Disponibilité",
            "description": "L'un des fondements de la sécurité informatique : maintenir le bon fonctionnement du système d'information. "
        },
        {
            "title": "Confidentialité",
            "description": "L'un des fondements de la sécurité informatique : rendre l'information inintelligible à d'autres personnes que les seuls acteurs d’une transaction. "
        },
        {
            "title": "Non répudiation",
            "description": "L'un des fondements de la sécurité informatique : garantir qu'une transaction ne peut être niée. "
        },
        {
            "title": "Authentification",
            "description": "L'un des fondements de la sécurité informatique : assurer que seules les personnes autorisées aient accès aux ressources. "
        },
        {
            "title": "RAID",
            "description": " Ensemble de techniques de virtualisation du stockage permettant de répartir des données sur plusieurs disques durs afin d'améliorer les performances, la sécurité ou la tolérance aux pannes. <br />RAID 0 : répartition des données sur deux disques. <br />RAID 1 : copie redondante des données d'un disque sur un deuxième.<br /> RAID 5 : répartition des données sur plusieurs disques grâce à un système de parité."
        },
        {
            "title": "Hash/condensat",
            "description": "Résultat de l'application d'une technique de hachage sur une chaîne de caractères, un message, un fichier."
        },
        {
            "title": "Salt/sel",
            "description": "Clé ajoutée avant le hachage, pour rendre le résultat plus robuste."
        },
        {
            "title": "SSL/TLS",
            "description": " Secure Sockets Layer : protocole cryptographique utilisé pour assurer la sécurité de la connexion Internet et la protection des données sensibles transmises entre deux systèmes. TLS (Transport Layer Security) est une nouvelle version, plus sûre, de SSL."
        },
        {
            "title": "TGPD",
            "description": "« Règlement Général sur la Protection des Données », encadre le traitement des données personnelles sur le territoire de l’Union européenne."
        }, 
        {
            "title": "SSH",
            "description": "Secure Shell :  protocole de communication sécurisé. Le protocole de connexion impose un échange de clés de chiffrement en début de connexion. Par la suite, tous les segments TCP sont authentifiés et chiffrés. Il remplace les différents protocoles non chiffrés tels que Telnet."
        }
     ]
    },
    {"Culture du test": [
        {
            "title": "Développement itératif",
            "description": "Le développement itératif consiste à effectuer de petits cycles de développement de code, dont on va s'efforcer de valider rapidement le fonctionnement. Il s'agit de découper son code en petites fonctionnalités, plutôt que de tout développer d'un coup."
        },
        {
            "title": "Logging/journalisation",
            "description": "Action de relever dans un journal tous les événements qui se produisent dans un système. Permet de mieux comprendre le fonctionnement de celui-ci."
        },
        {
            "title": "Débugging/déboggage",
            "description": "Action de chercher et de corriger l'origine d'une erreur dans un code informatique."
        }, 
        {
            "title": "Test d'acceptance/de validation",
            "description": "S'assurer que le code répond aux différents scénarios qui composent le besoin utilisateur. Prend généralement la forme \"given-when-then\"."
        }, 
        {
            "title": "Tests automatisés",
            "description": "Code écrit spécifiquement pour tester le code applicatif. Ces tests s'assurent qu'une fonction, un module, ou une application retourne un résultat conforme à l'attendu?"
        }, 
        {
            "title": "Code coverage/couverture de code",
            "description": "Mesure de l'étendue des tests automatisés sur une base de code (souvent exprimé en pourcentage de couverture), permettant d'identifier les parties de code qui ne bénéficient pas de tests associés et qui sont donc potentiellement plus à risque."
        }, 
        {
            "title": "Pyramide des tests",
            "description": "Modèle permettant de visualiser la volumétrie et la lourdeur des tests par type. Tests unitaires(rapides mais doivent être nombreux) > tests d'intégration > tests fonctionnels (peu nombreux mais très lourds à exécuter)."
        }, 
        {
            "title": "Test unitaire",
            "description": "Vérifie le comportement d'une fonction ou d'un composant de manière isolée, en s'assurant que le résultat est conforme à l'attendu."
        }, 
        {
            "title": "Test d'intégration",
            "description": "S'assure du bon fonctionnement de la mise en œuvre conjointe de plusieurs unités de programme."
        },
        {
            "title": "Test de bout en bout/fonctionnel/end-to-end",
            "description": "Vérifie que tous les composants d'un système sont capables de fonctionner de manière optimale dans des situations réelles. Le but est de vérifier le bon fonctionnement d'une application du début à la fin du parcours utilisateur."
        },
        {
            "title": "Test de non-régression",
            "description": "Vise à s'assurer que l'implémentation de nouvelles fonctionnalités n'a pas dégradé le fonctionnement du système."
        },
        {
            "title": "Mock",
            "description": "Données simulées utilisées pour tester le comportement isolé d'une fonctionnalité, sans la connecter au reste du système."
        }
    ]
    },
    {"Structures d'exécution": [
        {
            "title": "Compilateur",
            "description": "programme qui traite les instructions écrites dans un langage de programmation donné pour les traduire en langage machine. Première génération de programmes traducteurs de code, avec Fortran."
        },
        {
            "title": "Interpréteur",
            "description": "Programme qui transforme un langage de haut niveau en code machine, en opérant la traduction ligne à ligne pendant l'exécution du programme."
        },
        {
            "title": "Compilation, langages compilés",
            "description": "Processus qui transforme le code compréhensible par un humain en code machine sous forme d'un exécutable. Rapide à l'exécution, le code est obfusqué ; non cross-plateformes, nécessaire de recompiler le code à chaque modification. C, C++, Objective C..."
        },
        {
            "title": "Langages interprétés",
            "description": "Traduction du code en langage machine ligne à ligne au fil de son exécution. Cross-plateforme à condition qu'un logiciel interpréteur soit présent, pas de temps de compilation entre le code et le test ; exécution moins rapide que le code compilé, code lisible (non obfusqué). PHP, JS..." 
        },
        {
            "title": "Langages intermédiaires/Bytecode",
            "description": "Approche qui consiste à compiler le code dans un langage intermédiaire optimisé pour l'interprétation (Bytecode), qui sera ensuite interprété par la plateforme visée. Permet d’obfusquer son code, d’avoir une compilation intermédiaire plus rapide et une exécution mieux optimisée. Java, C#, Python, VBnet... "
        }, 
        {
            "title": "Transpilation",
            "description": "Action de traduire le code source d’un programme écrit avec un premier langage en un programme équivalent écrit dans un second langage ayant le même niveau d’abstraction (exemple : TS vers JS)."
        }
    ]
    }
]